# We'll begin by loading up the libraries and data we need, as always.
knitr::opts_chunk$set(echo = TRUE)
# this deletes any variables that are in your environment
# useful so you don't get conflicts you're unaware of
rm(list=ls())
# loading the libraries
library(tidyverse)
library(here)
library(ggplot2)
# you might need other libraries; load here here if so
# loading datasets (don't change this)
ds <- read_csv(file=here("sneezes.csv"))
dl <- read_csv(file=here("liedetector.csv"))
df <- read_csv(file=here("foodwaste.csv"))
da <- read_csv(file=here("animals.csv"))
dh <- read_csv(file=here("health.csv"))
dp <- read_csv(file=here("positivity.csv"))
# makes variables into factors (don't change this)
dh$person <- as.factor(dh$person)
dp$person <- as.factor(dp$person)
dl$question <- as.factor(dl$question)
ds$distCat <- as.factor(ds$distCat)
# reorders so orders are intuitive, and converts to factors
# (don't change this)
da$size <- factor(da$size,levels=c("small","medium","large"))
da$year <- factor(da$year,levels=c("past","present"))
dh$height <- factor(dh$height,levels=c("short","tall"))
dh$income <- factor(dh$income,levels=c("poor","rich"))
dp$then <- factor(dp$then,levels=c("positive","negative"))
dp$now <- factor(dp$now,levels=c("positive","negative"))
head(ds)
cor.test(ds$distance,ds$sneezes)
head(ds)
library(ggplot2)
library(dplyr)
summary_df <- ds %>%
group_by(distCat) %>%
summarise(
mean_sneezes = mean(sneezes),
se = sd(sneezes) / sqrt(n())
)
colors <- c("#1f77b4", "#2ca02c", "#d62728")  # blue, green, red
names(colors) <- levels(ds$distCat)
ggplot(summary_df, aes(x = distCat, y = mean_sneezes, fill = distCat)) +
geom_bar(stat = "identity", color = "black", alpha = 0.6) +
geom_errorbar(aes(ymin = mean_sneezes - se, ymax = mean_sneezes + se),
width = 0.2) +
geom_point(data = ds,
aes(x = distCat, y = sneezes, color = distCat),
position = position_nudge(x = 0.05),
alpha = 0.8, size = 2, show.legend = FALSE) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
theme_minimal() +
labs(
title = "Mean Number of Sneezes by Distance Category",
x = "Distance Category",
y = "Mean Number of Sneezes"
) +
theme(legend.position = "none")
library(car)
leveneTest(sneezes ~ distCat, data = ds)
model <- aov(sneezes ~ distCat, data = ds)
shapiro.test(residuals(model))
anova_model <- aov(sneezes ~ distCat, data = ds)
summary(anova_model)
library(effectsize)
anova_model <- aov(sneezes ~ distCat, data = ds)
summary(anova_model)
# Run post-hoc test: Tukey's HSD
TukeyHSD(anova_model)
